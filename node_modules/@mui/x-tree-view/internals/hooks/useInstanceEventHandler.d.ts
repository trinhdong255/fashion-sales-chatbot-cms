import { CleanupTracking } from "../utils/cleanupTracking/CleanupTracking.js";
import { TreeViewAnyPluginSignature, TreeViewUsedEvents } from "../models/index.js";
import { TreeViewEventListener } from "../models/events.js";
import { UseTreeViewInstanceEventsInstance } from "../corePlugins/useTreeViewInstanceEvents/useTreeViewInstanceEvents.types.js";
interface RegistryContainer {
  registry: CleanupTracking | null;
}
export declare function createUseInstanceEventHandler(registryContainer: RegistryContainer): <Instance extends UseTreeViewInstanceEventsInstance & {
  $$signature: TreeViewAnyPluginSignature;
}, E extends keyof TreeViewUsedEvents<Instance["$$signature"]>>(instance: Instance, eventName: E, handler: TreeViewEventListener<TreeViewUsedEvents<Instance["$$signature"]>[E]>) => void;
export declare const unstable_resetCleanupTracking: () => void;
export declare const useInstanceEventHandler: <Instance extends UseTreeViewInstanceEventsInstance & {
  $$signature: TreeViewAnyPluginSignature;
}, E extends keyof TreeViewUsedEvents<Instance["$$signature"]>>(instance: Instance, eventName: E, handler: TreeViewEventListener<TreeViewUsedEvents<Instance["$$signature"]>[E]>) => void;
export {};